package server

import (
	"github.com/NeptuneG/go-back/gen/go/services/${SERVICE_UNDERSCORE_NAME}/proto"
	"github.com/NeptuneG/go-back/pkg/log"
	db "github.com/NeptuneG/go-back/services/${SERVICE_UNDERSCORE_NAME}/db/sqlc"
)

type ${SERVICE_PASCALCASE_NAME}Service struct {
	proto.Unimplemented${SERVICE_PASCALCASE_NAME}ServiceServer
	store *db.Store
}

func New() *${SERVICE_PASCALCASE_NAME}Service {
	return &${SERVICE_PASCALCASE_NAME}Service{store: db.NewStore()}
}

func (s *${SERVICE_PASCALCASE_NAME}Service) Close() {
	if err := s.store.Close(); err != nil {
		log.Error("failed to close database connection", log.Field.Error(err))
		panic(err)
	}
}
