version: "3.9"
x-svc-setting: &service
  # volumes:
    # - .:/go/src/github.com/NeptuneG/go-back
  # entrypoint: ["air", "-c", ".air.toml"]
  security_opt:
    - seccomp:unconfined
  stdin_open: true
  tty: true

services:
  gateway.default.svc.cluster.local:
    <<: *service
    container_name: gateway-service
    image: neptuneg/gateway-service
    ports:
      - "4000:4000"
      - "2347:2345"
    links:
      - user.default.svc.cluster.local
      - live.default.svc.cluster.local
      - scraper.default.svc.cluster.local
      - payment.default.svc.cluster.local
  user.default.svc.cluster.local:
    <<: *service
    container_name: user-service
    image: neptuneg/user-service
    ports:
      - "2346:2345"
    links:
      - db.default.svc.cluster.local
  live.default.svc.cluster.local:
    <<: *service
    container_name: live-service
    image: neptuneg/live-service
    ports:
      - "2348:2345"
    links:
      - db.default.svc.cluster.local
  payment.default.svc.cluster.local:
    <<: *service
    container_name: payment-service
    image: neptuneg/payment-service
    ports:
      - "2350:2345"
    links:
      - db.default.svc.cluster.local
    environment:
      GRPC_GO_RETRY: on
  scraper.default.svc.cluster.local:
    <<: *service
    container_name: scraper-service
    image: neptuneg/scraper-service
    ports:
      - "2349:2345"
    environment:
      FAKTORY_PROVIDER: FAKTORY_URL
      FAKTORY_URL: tcp://faktory.default.svc.cluster.local:7419
    links:
      - faktory.default.svc.cluster.local
      - redis-mq.default.svc.cluster.local
  db.default.svc.cluster.local:
    image: postgres:14.1-alpine3.14
    container_name: go-back-db
    ports:
      - "5433:5432"
    environment:
      TZ: 'Asia/Tokyo'
      POSTGRES_USER: dev
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db-data:/var/lib/postgresql/data
  redis-mq.default.svc.cluster.local:
    container_name: redis-mq
    image: redis:6.2.6-alpine3.14
    ports:
      - "6380:6379"
    volumes:
      - redis-mq-data:/data
  faktory.default.svc.cluster.local:
    container_name: faktory
    image: contribsys/faktory:latest
    volumes:
      - faktory-data:/var/lib/faktory
    ports:
      - "7419:7419"
      - "7420:7420"
  faktory-workers:
    container_name: faktory-workers
    image: neptuneg/faktory-workers
    build:
      context: ./services/faktory-workers
    environment:
      TZ: 'Asia/Tokyo'
      FAKTORY_PROVIDER: FAKTORY_URL
      FAKTORY_URL: tcp://faktory.default.svc.cluster.local:7419
    volumes:
      - ./services/faktory-workers:/app
    depends_on:
      - faktory.default.svc.cluster.local
      - redis-mq.default.svc.cluster.local
volumes:
  redis-mq-data:
  faktory-data:
  db-data:
