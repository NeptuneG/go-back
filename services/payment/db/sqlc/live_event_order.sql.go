// Code generated by sqlc. DO NOT EDIT.
// source: live_event_order.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createLiveEventOrder = `-- name: CreateLiveEventOrder :one
INSERT INTO live_event_orders (
  user_id, live_event_id, price, user_points
) VALUES (
  $1, $2, $3, $4
) RETURNING id, user_id, live_event_id, price, user_points, created_at, updated_at
`

type CreateLiveEventOrderParams struct {
	UserID      uuid.UUID `json:"user_id"`
	LiveEventID uuid.UUID `json:"live_event_id"`
	Price       int32     `json:"price"`
	UserPoints  int32     `json:"user_points"`
}

func (q *Queries) CreateLiveEventOrder(ctx context.Context, arg CreateLiveEventOrderParams) (LiveEventOrder, error) {
	row := q.queryRow(ctx, q.createLiveEventOrderStmt, createLiveEventOrder,
		arg.UserID,
		arg.LiveEventID,
		arg.Price,
		arg.UserPoints,
	)
	var i LiveEventOrder
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.LiveEventID,
		&i.Price,
		&i.UserPoints,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
